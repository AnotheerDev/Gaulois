REQUETE SQL

Quand vous réalisez une requête faites en sorte pour chaque clause SQL de les écrire les 
unes en dessous des autres et en MAJUSCULES



Une requête SQL doit contenir au minimum les éléments suivants :

La clause SELECT : cette clause spécifie les colonnes que vous voulez sélectionner dans votre requête.
La clause FROM : cette clause spécifie la table à partir de laquelle vous voulez sélectionner les données.
La clause WHERE : cette clause spécifie les conditions que les données doivent respecter pour être sélectionnées.
La clause GROUP BY (optionnelle) : cette clause spécifie la façon dont les données doivent être regroupées.
La clause HAVING (optionnelle) : cette clause spécifie les conditions que les groupes doivent respecter pour être sélectionnés.
La clause ORDER BY (optionnelle) : cette clause spécifie l'ordre dans lequel les données doivent être triées.



SELECT nom_personnage, id_personnage
FROM personnage
WHERE id_lieu = 1
ORDER BY nom_personnage


1. Nom des lieux qui finissent par 'um'.

SELECT nom_lieu
FROM lieu
WHERE nom_lieu
LIKE '%um'



2. Nombre de personnages par lieu (trié par nombre de personnages décroissant).

SELECT lieu.nom_lieu, COUNT(personnage.id_personnage) AS Nombre_Personnages
-- Sélectionne le nom du lieu et compte le nombre de personnages dans chaque lieu
FROM lieu
-- Sélectionne la table "lieu"
INNER JOIN personnage ON lieu.id_lieu = personnage.id_lieu
-- Effectue une jointure interne entre la table "lieu" et la table "personnage" en utilisant l'identifiant du lieu comme clé de jointure
GROUP BY lieu.id_lieu, lieu.nom_lieu
-- Groupe les résultats par l'identifiant du lieu et le nom du lieu
ORDER BY Nombre_Personnages DESC;
-- Trie les résultats par ordre décroissant du nombre de personnages



3. Nom des personnages + spécialité + adresse et lieu d'habitation, triés par lieu puis par nom de personnage.

SELECT specialite.nom_specialite, COUNT(personnage.id_specialite) AS Nombre_Personnages
-- Sélectionne le nom de la spécialité et compte le nombre de personnages pour chaque spécialité
FROM specialite
-- Sélectionne la table "specialite"
INNER JOIN personnage ON specialite.id_specialite = personnage.id_specialite
-- Effectue une jointure interne entre la table "specialite" et la table "personnage" en utilisant l'identifiant de la spécialité comme clé de jointure
GROUP BY specialite.id_specialite, specialite.nom_specialite
-- Groupe les résultats par l'identifiant de la spécialité et le nom de la spécialité
ORDER BY Nombre_Personnages DESC;
-- Trie les résultats par ordre décroissant du nombre de personnages pour chaque spécialité
